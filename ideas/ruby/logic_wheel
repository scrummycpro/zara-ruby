Selenium is a popular tool used for automating web browsers. It allows you to simulate user interaction with web pages, such as clicking buttons, filling out forms, and navigating across different pages. Selenium provides a suite of tools and libraries for different programming languages to achieve this automation.

In the context of your question, let's break it down:

- **Is**: Selenium is a framework for automating web browsers.
- **Is not**: Selenium is not a programming language itself, but rather a set of tools and libraries that can be used with various programming languages to automate web interactions.
- **Should**: Selenium should be associated with web testing, particularly for automating repetitive tasks in web application testing.
- **Should not**: Selenium should not be associated with standalone application testing or as a replacement for manual testing entirely. It's best used in conjunction with other testing methodologies.

For using Selenium with Ruby, you can use a library called "selenium-webdriver." Here's a basic example of how you can use Selenium with Ruby:

```ruby
require 'selenium-webdriver'

# Create a new instance of the Firefox driver
driver = Selenium::WebDriver.for :firefox

# Navigate to a web page
driver.get 'https://www.example.com'

# Find an element by its ID and interact with it
element = driver.find_element(id: 'some_id')
element.click

# Close the browser
driver.quit
```

This script demonstrates opening a browser, navigating to a webpage, finding an element on the page by its ID, and clicking on it. You can perform various other actions like filling forms, checking for the presence of elements, waiting for elements to load, etc., using Selenium with Ruby.